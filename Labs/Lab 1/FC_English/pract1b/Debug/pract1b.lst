
pract1b.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  0c000000  0c000000  00008000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .bss          00000004  0c000008  0c000008  00008008  2**0
                  ALLOC
  2 .text         00000040  0c00000c  0c00000c  0000800c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .ARM.attributes 00000022  00000000  00000000  0000804c  2**0
                  CONTENTS, READONLY
  4 .debug_line   0000004a  00000000  00000000  0000806e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000069  00000000  00000000  000080b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000014  00000000  00000000  00008121  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000020  00000000  00000000  00008138  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0c00000c <start>:
.bss
C:		.space 4

.text
start:
		ldr 	r0, =A
 c00000c:	e59f002c 	ldr	r0, [pc, #44]	; c000040 <exit+0xc>
		ldr 	r1,[r0]			@Loads the value of A into r1
 c000010:	e5901000 	ldr	r1, [r0]
		ldr		r0, =B
 c000014:	e59f0028 	ldr	r0, [pc, #40]	; c000044 <exit+0x10>
		ldr 	r2, [r0]		@Loads the value of B into r2
 c000018:	e5902000 	ldr	r2, [r0]
		mov 	r3, #0			@r3 = 0
 c00001c:	e3a03000 	mov	r3, #0

0c000020 <loop>:
loop:	cmp 	r1, r2
 c000020:	e1510002 	cmp	r1, r2
		blt		exit
 c000024:	ba000002 	blt	c000034 <exit>
		sub 	r1, r1, r2
 c000028:	e0411002 	sub	r1, r1, r2
		add 	r3, r3, #1
 c00002c:	e2833001 	add	r3, r3, #1
		b 		loop
 c000030:	eafffffa 	b	c000020 <loop>

0c000034 <exit>:
exit:	ldr 	r0, =C			@Loads the address of C into r0
 c000034:	e59f000c 	ldr	r0, [pc, #12]	; c000048 <exit+0x14>
		str 	r3, [r0]
 c000038:	e5803000 	str	r3, [r0]
		b		.
 c00003c:	eafffffe 	b	c00003c <exit+0x8>
 c000040:	0c000000 	.word	0x0c000000
 c000044:	0c000004 	.word	0x0c000004
 c000048:	0c000008 	.word	0x0c000008
